version: 2.1

orbs:
  codecov: codecov/codecov@3.2.2

workflows:
  version: 2
  test:
    jobs:
      - build_and_test
      - build_minimal
      - build_maximal
      - lint
      - coverage
  nightly:
    triggers:
      - schedule:
          # Built every weekday night
          cron: "0 0 * * 1-5"
          filters:
            branches:
              only:
                - main
    jobs:
      # Build with minimal versions of dependencies
      - build_minimal
      # Build with maximal versions of dependencies
      - build_maximal

jobs:
  build_and_test:
    docker:
      - image: rust:1.65.0
    working_directory: ~/project
    steps:
      - checkout
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version; rustup target list --installed
      - run:
          name: Generate a lockfile
          command: cargo update
      - restore_cache:
          keys:
            - cargocache-v2-multi-test:1.65.0-{{ checksum "Cargo.lock" }}
            - cargocache-v2-multi-test:1.65.0-
      - run:
          name: Build library for native target
          command: cargo build --locked
      - run:
          name: Run unit tests
          command: cargo test --workspace --locked
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target
          key: cargocache-v2-multi-test:1.65.0-{{ checksum "Cargo.lock" }}

  build_minimal:
    docker:
      - image: rustlang/rust:nightly
    working_directory: ~/project/
    steps:
      - checkout
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version; rustup target list --installed
      - run:
          name: Remove Cargo.lock
          command: rm Cargo.lock
      - restore_cache:
          keys:
            - cargocache-v2-multi-test:1.65.0-minimal-{{ checksum "Cargo.toml" }}
      - run:
          name: Build library for native target
          command: cargo build -Zminimal-versions --features backtrace,cosmwasm_1_1,cosmwasm_1_2,cosmwasm_1_3,cosmwasm_1_4
      - run:
          name: Run unit tests
          command: cargo test --workspace -Zminimal-versions --features backtrace,cosmwasm_1_1,cosmwasm_1_2,cosmwasm_1_3,cosmwasm_1_4
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target
          key: cargocache-v2-multi-test:1.65.0-minimal-{{ checksum "Cargo.toml" }}

  build_maximal:
    docker:
      - image: rust:1.65.0
    working_directory: ~/project/
    steps:
      - checkout
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version; rustup target list --installed
      - run:
          name: Update Cargo.lock
          command: cargo update
      - restore_cache:
          keys:
            - cargocache-v2-multi-test:1.65.0-{{ checksum "Cargo.lock" }}
      - run:
          name: Build library for native target
          command: cargo build --locked --all-features
      - run:
          name: Run unit tests
          command: cargo test --workspace --locked --features backtrace,cosmwasm_1_1,cosmwasm_1_2,cosmwasm_1_3,cosmwasm_1_4
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target
          key: cargocache-v2-multi-test:1.65.0-{{ checksum "Cargo.lock" }}

  lint:
    docker:
      - image: rust:1.65.0
    steps:
      - checkout
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version; rustup target list --installed
      - run:
          name: Generate a lockfile
          command: cargo update
      - restore_cache:
          keys:
            - cargocache-v2-lint-rust:1.65.0-{{ checksum "Cargo.lock" }}
            - cargocache-v2-lint-rust:1.65.0-
      - run:
          name: Add rustfmt component
          command: rustup component add rustfmt
      - run:
          name: Add clippy component
          command: rustup component add clippy
      - run:
          name: Check formatting of workspace
          command: cargo fmt -- --check
      - run:
          name: Clippy linting on workspace
          command: cargo clippy --all-targets -- -D warnings
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target/debug/.fingerprint
            - target/debug/build
            - target/debug/deps
          key: cargocache-v2-lint-rust:1.65.0-{{ checksum "Cargo.lock" }}

  coverage:
    name: Code coverage
    runs-on: ubuntu-latest
    container:
      image: xd009642/tarpaulin:0.27.1
      options: --security-opt seccomp=unconfined
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Generate code coverage
        run: |
          cargo tarpaulin --verbose --all-features --workspace --timeout 120 --out xml --engine llvm
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v2
        with:
          fail_ci_if_error: true
